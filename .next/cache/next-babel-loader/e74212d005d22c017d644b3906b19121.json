{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { Button, Image } from \"antd\";\nimport { formatDate, removeDash } from \"../../common/utils\";\n\nfunction Post({\n  type,\n  className,\n  style,\n  data\n}) {\n  switch (type) {\n    case \"inline\":\n      return __jsx(\"div\", {\n        className: `post-inline ${classNames(className)}`\n      }, __jsx(\"div\", {\n        className: \"post-inline-image\"\n      }, __jsx(\"img\", {\n        title: data.title,\n        src: process.env.PUBLIC_URL + data.coverImage,\n        alt: \"Post image\"\n      })), __jsx(\"div\", {\n        className: \"post-inline-content\"\n      }, __jsx(\"div\", {\n        className: \"post-inline-content__meta\"\n      }, __jsx(\"p\", null, __jsx(\"i\", {\n        className: \"fal fa-calendar\"\n      }), formatDate(data.publicDate)), __jsx(\"p\", null, __jsx(\"i\", {\n        className: \"fal fa-comments\"\n      }), data.comments.length)), __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", {\n        className: \"post-title\"\n      }, data.title))));\n\n    case \"row\":\n      return __jsx(\"div\", {\n        className: `post -style-one ${classNames(className)}`\n      }, __jsx(\"div\", {\n        className: \"post-image\"\n      }, __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", null, __jsx(Image, {\n        title: data.title,\n        src: process.env.PUBLIC_URL + data.coverImage,\n        alt: \"Post image\",\n        placeholder: true\n      })))), __jsx(\"div\", {\n        className: \"post-content\"\n      }, __jsx(Button, {\n        type: \"primary\",\n        className: \"post-category\"\n      }, removeDash(data.category)), __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", {\n        className: \"post-title\"\n      }, data.title)), __jsx(\"div\", {\n        className: \"post-info\"\n      }, __jsx(\"p\", {\n        className: \"credit date\"\n      }, formatDate(data.publicDate)), __jsx(\"p\", {\n        className: \"credit comment\"\n      }, data.comments.length, \" Comment\")), __jsx(\"p\", {\n        className: \"post-description\"\n      }, data.shortDescription), __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", {\n        className: \"post-readmore\"\n      }, \"Read More\", __jsx(\"span\", null, __jsx(\"i\", {\n        className: \"arrow_carrot-2right\"\n      }))))));\n\n    case \"column-full\":\n      return __jsx(\"div\", {\n        className: `post -style-three ${classNames(className)}`\n      }, __jsx(\"div\", {\n        className: \"post-image\"\n      }, __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", null, __jsx(Image, {\n        width: \"100%\",\n        title: data.title,\n        src: process.env.PUBLIC_URL + data.coverImage,\n        alt: \"Post image\",\n        placeholder: true\n      })))), __jsx(\"div\", {\n        className: \"post-content\"\n      }, __jsx(\"div\", {\n        className: \"post-info\"\n      }, __jsx(\"p\", {\n        className: \"credit date\"\n      }, formatDate(data.publicDate)), __jsx(\"p\", {\n        className: \"credit comment\"\n      }, data.comments.length, \" Comment\")), __jsx(\"p\", {\n        className: \"post-description\"\n      }, data.shortDescription), __jsx(\"a\", {\n        className: \"post-readmore\",\n        href: \"#\"\n      }, \"Read More\", __jsx(\"span\", null, __jsx(\"i\", {\n        className: \"arrow_carrot-2right\"\n      })))));\n\n    case \"tiny\":\n      return __jsx(\"div\", {\n        className: `post-tiny ${classNames(className)}`\n      }, __jsx(\"div\", {\n        className: \"post-tiny-image\"\n      }, __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", null, __jsx(Image, {\n        width: \"100%\",\n        title: data.title,\n        src: process.env.PUBLIC_URL + data.coverImage,\n        alt: \"Post image\",\n        placeholder: true\n      })))), __jsx(\"div\", {\n        className: \"post-tiny-content\"\n      }, __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", {\n        className: \"post-tiny-title\"\n      }, data.title)), __jsx(\"p\", {\n        className: \"post-tiny-date\"\n      }, formatDate(data.publicDate))));\n\n    default:\n      return __jsx(\"div\", {\n        className: `post -style-two ${classNames(className)}`\n      }, __jsx(\"div\", {\n        className: \"post-image\"\n      }, __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", null, __jsx(Image, {\n        title: data.title,\n        src: process.env.PUBLIC_URL + data.coverImage,\n        alt: \"Post image\",\n        placeholder: true\n      })))), __jsx(\"div\", {\n        className: \"post-content\"\n      }, __jsx(Button, {\n        type: \"primary\",\n        className: \"post-category\"\n      }, removeDash(data.category)), __jsx(Link, {\n        href: process.env.PUBLIC_URL + `/blog/post/[slug]`,\n        as: process.env.PUBLIC_URL + `/blog/post/${data.slug}`\n      }, __jsx(\"a\", {\n        className: \"post-title\"\n      }, data.title)), __jsx(\"div\", {\n        className: \"post-info\"\n      }, __jsx(\"p\", {\n        className: \"credit date\"\n      }, formatDate(data.publicDate)), __jsx(\"p\", {\n        className: \"credit comment\"\n      }, data.comments.length, \" Comment\"))));\n  }\n}\n\nexport default /*#__PURE__*/React.memo(Post);","map":null,"metadata":{},"sourceType":"module"}