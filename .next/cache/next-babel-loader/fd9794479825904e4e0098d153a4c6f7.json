{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Tabs, Row, Col, Empty, Skeleton } from \"antd\";\nimport classNames from \"classnames\";\nimport SectionTitle from \"../../other/SectionTitle\";\nimport Product from \"../../product/Product\";\nimport FetchDataHandle from \"../../other/FetchDataHandle\";\n\nfunction ProductTab(_ref) {\n  var style = _ref.style,\n      data = _ref.data,\n      className = _ref.className,\n      onTabChange = _ref.onTabChange,\n      productClassName = _ref.productClassName,\n      headerCategories = _ref.headerCategories,\n      headerTitle = _ref.headerTitle,\n      headerClass = _ref.headerClass,\n      _ref$showTitleDecorat = _ref.showTitleDecoration,\n      showTitleDecoration = _ref$showTitleDecorat === void 0 ? false : _ref$showTitleDecorat,\n      _ref$headerType = _ref.headerType,\n      headerType = _ref$headerType === void 0 ? \"grid\" : _ref$headerType,\n      productCol = _ref.productCol;\n  var TabPane = Tabs.TabPane;\n\n  var onChooseCategory = function onChooseCategory(key) {\n    onTabChange(key);\n  };\n\n  var renderTabContent = function renderTabContent() {\n    return __jsx(FetchDataHandle, {\n      data: data,\n      renderData: function renderData(data) {\n        return __jsx(Row, {\n          gutter: [{\n            xs: 0,\n            md: 15\n          }, {\n            xs: 0,\n            md: 15\n          }]\n        }, data.map(function (item, index) {\n          return __jsx(Col, _extends({\n            key: index\n          }, productCol), __jsx(Product, {\n            className: productClassName,\n            data: item\n          }));\n        }));\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"product-tab \".concat(classNames(className)),\n    style: style\n  }, __jsx(\"div\", {\n    className: \"product-tab-header \".concat(headerType === \"row\" ? \"-style-two\" : \"style-one\", \"  \").concat(classNames(headerClass))\n  }, headerType === \"grid\" && __jsx(SectionTitle, {\n    title: headerTitle,\n    className: \"-center\",\n    hideDecoration: showTitleDecoration\n  }), __jsx(Tabs, {\n    tabBarExtraContent: headerType === \"row\" ? {\n      left: __jsx(SectionTitle, {\n        title: headerTitle,\n        className: \"-center\",\n        hideDecoration: true\n      })\n    } : null,\n    defaultActiveKey: \"1\",\n    centered: headerType === \"row\" ? false : true,\n    onChange: onChooseCategory\n  }, __jsx(TabPane, {\n    tab: \"All\",\n    key: \"\"\n  }, renderTabContent()), headerCategories.map(function (item, index) {\n    return __jsx(TabPane, {\n      tab: item,\n      key: item\n    }, renderTabContent());\n  }))));\n}\n\nexport default /*#__PURE__*/React.memo(ProductTab);","map":null,"metadata":{},"sourceType":"module"}