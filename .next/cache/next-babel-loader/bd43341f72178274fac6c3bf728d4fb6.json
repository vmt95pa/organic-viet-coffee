{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ogami-main\\\\ogami\\\\src\\\\components\\\\header\\\\elements\\\\SearchForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Select, AutoComplete, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport categories from \"../../../data/categories.json\";\nimport useDebounce from \"../../../common/useDebound\";\nimport { fetchSearchedProductRequest } from \"../../../redux/actions/shopActions\";\nimport Link from \"next/link\";\n\nfunction SearchForm(_ref) {\n  _s();\n\n  var _ref$enterButton = _ref.enterButton,\n      enterButton = _ref$enterButton === void 0 ? \"Search\" : _ref$enterButton,\n      hideSelect = _ref.hideSelect;\n  var Option = Select.Option;\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      currentSearch = _useState[0],\n      setCurrentSearch = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      currentCategory = _useState2[0],\n      setCurrentCategory = _useState2[1];\n\n  var deboundValue = useDebounce(currentSearch, 300);\n  var shopState = useSelector(function (state) {\n    return state.shopReducer;\n  });\n  var searchedProducts = shopState.searchedProducts;\n\n  var onChange = function onChange(val) {\n    setCurrentSearch(val);\n  };\n\n  var onSelectOption = function onSelectOption(value, option) {\n    setCurrentSearch(value);\n  };\n\n  var onSearch = function onSearch(val) {\n    if (!currentSearch || currentSearch === \"\") {\n      return;\n    } else {\n      router.push({\n        pathname: process.env.PUBLIC_URL + \"/shop/shop-3-column\",\n        query: {\n          q: currentSearch\n        }\n      });\n    }\n  };\n\n  var onChooseCateogry = function onChooseCateogry(val) {\n    setCurrentCategory(val);\n  };\n\n  var options = searchedProducts.data.length > 0 && searchedProducts.data.map(function (item) {\n    return {\n      value: item.name\n    };\n  });\n  useEffect(function () {\n    dispatch(fetchSearchedProductRequest({\n      input: currentSearch,\n      limit: 10,\n      category: currentCategory\n    }));\n  }, [deboundValue, currentCategory]);\n  return __jsx(\"div\", {\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search-form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"search-form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(AutoComplete, {\n    backfill: true,\n    value: currentSearch,\n    onSelect: onSelectOption,\n    onChange: onChange,\n    options: options,\n    filterOption: function filterOption(inputValue, option) {\n      return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Search, {\n    placeholder: \"Nh\\u1EADp s\\u1EA3n ph\\u1EA9m c\\u1EA7n t\\xECm ... \",\n    size: \"large\",\n    enterButton: enterButton,\n    bordered: false,\n    loading: searchedProducts.loading,\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(SearchForm, \"Z/sFyFb9CVz1BEJNH6j0JsMLR3Y=\", false, function () {\n  return [useRouter, useDispatch, useDebounce, useSelector];\n});\n\n_c = SearchForm;\nexport default _c2 = /*#__PURE__*/React.memo(SearchForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ogami-main/ogami/src/components/header/elements/SearchForm.js"],"names":["React","useCallback","useEffect","useState","Select","AutoComplete","Input","useSelector","useDispatch","useRouter","categories","useDebounce","fetchSearchedProductRequest","Link","SearchForm","enterButton","hideSelect","Option","router","dispatch","currentSearch","setCurrentSearch","currentCategory","setCurrentCategory","deboundValue","shopState","state","shopReducer","searchedProducts","onChange","val","onSelectOption","value","option","onSearch","push","pathname","process","env","PUBLIC_URL","query","q","onChooseCateogry","options","data","length","map","item","name","input","limit","category","inputValue","toUpperCase","indexOf","loading","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Select, AutoComplete, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\n\nimport categories from \"../../../data/categories.json\";\nimport useDebounce from \"../../../common/useDebound\";\nimport { fetchSearchedProductRequest } from \"../../../redux/actions/shopActions\";\nimport Link from \"next/link\";\n\nfunction SearchForm({ enterButton = \"Search\", hideSelect }) {\n  const { Option } = Select;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const [currentCategory, setCurrentCategory] = useState(\"\");\n  const deboundValue = useDebounce(currentSearch, 300);\n  const shopState = useSelector((state) => state.shopReducer);\n  const { searchedProducts } = shopState;\n  const onChange = (val) => {\n    setCurrentSearch(val);\n  };\n  const onSelectOption = (value, option) => {\n    setCurrentSearch(value);\n  };\n  const onSearch = (val) => {\n    if (!currentSearch || currentSearch === \"\") {\n      return;\n    } else {\n      router.push({\n        pathname: process.env.PUBLIC_URL + \"/shop/shop-3-column\",\n        query: { q: currentSearch },\n      });\n    }\n  };\n  const onChooseCateogry = (val) => {\n    setCurrentCategory(val);\n  };\n  const options =\n    searchedProducts.data.length > 0 &&\n    searchedProducts.data.map((item) => ({ value: item.name }));\n\n  useEffect(() => {\n    dispatch(\n      fetchSearchedProductRequest({\n        input: currentSearch,\n        limit: 10,\n        category: currentCategory,\n      })\n    );\n  }, [deboundValue, currentCategory]);\n  return (\n    <div className=\"search-form\">\n      <div className=\"search-form-wrapper\">\n        <div className=\"search-form-input\">\n          <AutoComplete\n            backfill\n            value={currentSearch}\n            onSelect={onSelectOption}\n            onChange={onChange}\n            options={options}\n            filterOption={(inputValue, option) =>\n              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          >\n            <Input.Search\n              placeholder=\"Nhập sản phẩm cần tìm ... \"\n              size=\"large\"\n              enterButton={enterButton}\n              bordered={false}\n              loading={searchedProducts.loading}\n              onSearch={onSearch}\n            />\n          </AutoComplete>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(SearchForm);\n"]},"metadata":{},"sourceType":"module"}