{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, message, Rate, Empty, Breadcrumb } from \"antd\";\nimport Link from \"next/link\";\nimport { fetchCartRequest } from \"../../redux/actions/cartActions\";\nimport { onAddProductToCart } from \"../../common/cartServices\";\nimport { checkProductInCart } from \"../../common/shopUtils\";\nimport { formatCurrency } from \"../../common/utils\";\nimport LayoutOne from \"../../components/layout/LayoutOne\";\nimport Container from \"../../components/other/Container\";\nimport PartnerOne from \"../../components/sections/partners/PartnerOne\";\n\nfunction compare() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      addToCartLoading = _useState[0],\n      setAddToCartLoading = _useState[1];\n\n  var compareState = useSelector(function (state) {\n    return state.compareReducer;\n  });\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n\n  var onAddToCart = function onAddToCart(product) {\n    setAddToCartLoading(true);\n    onAddProductToCart({\n      product: product,\n      onSuccess: function onSuccess(data) {\n        setAddToCartLoading(false);\n        message.success(\"Product added to cart\");\n        dispatch(fetchCartRequest());\n      },\n      onError: function onError(mes, err) {\n        setAddToCartLoading(false);\n        message.error(mes);\n      }\n    });\n  };\n\n  return __jsx(LayoutOne, {\n    title: \"Compare\"\n  }, __jsx(Container, null, __jsx(Breadcrumb, {\n    separator: \">\"\n  }, __jsx(Breadcrumb.Item, null, __jsx(\"i\", {\n    className: \"fas fa-home\"\n  }), \"Home\"), __jsx(Breadcrumb.Item, null, \"Shop\"), __jsx(Breadcrumb.Item, null, \"Compare\")), compareState.length === 0 ? __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No product in compare\"\n  }) : __jsx(\"div\", {\n    className: \"compare\"\n  }, __jsx(\"div\", {\n    className: \"compare-table\"\n  }, __jsx(\"table\", null, __jsx(\"colgroup\", null, __jsx(\"col\", {\n    style: {\n      width: \"25%\"\n    }\n  }), __jsx(\"col\", {\n    style: {\n      width: \"25%\"\n    }\n  }), __jsx(\"col\", {\n    style: {\n      width: \"25%\"\n    }\n  }), __jsx(\"col\", {\n    style: {\n      width: \"25%\"\n    }\n  })), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"ITMES\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-item\"\n    }, __jsx(\"img\", {\n      src: process.env.PUBLIC_URL + item.coverImage,\n      alt: \"Product image\"\n    }), __jsx(\"h5\", {\n      className: \"product-type\"\n    }, item.category), __jsx(Link, {\n      href: process.env.PUBLIC_URL + \"/product/[slug]\",\n      as: process.env.PUBLIC_URL + \"/product/\".concat(item.slug)\n    }, __jsx(\"a\", {\n      className: \"product-name\",\n      title: \"Pure Pineapple\"\n    }, item.name)));\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"CUSTOMER RATING\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-rate\"\n    }, __jsx(Rate, {\n      defaultValue: item.rate\n    }));\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"Price\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-price\"\n    }, formatCurrency(item.price));\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"ADD TO CART\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-atc\"\n    }, __jsx(Button, {\n      disabled: checkProductInCart(cartState.data, item.id),\n      onClick: function onClick() {\n        return onAddToCart(item);\n      },\n      type: \"link\",\n      loading: addToCartLoading\n    }, \"Add to cart\"));\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"AVAILABILITY\"), compareState.map(function (item, index) {\n    return item.quantity > 0 ? __jsx(\"td\", {\n      key: index,\n      className: \"compare-availability -avaiable\"\n    }, item.quantity, \" in stock\") : __jsx(\"td\", {\n      key: index,\n      className: \"compare-availability -outstock\"\n    }, \"Out of stock\");\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"weight\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-weight\"\n    }, item.specifications.weight);\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"Size\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-size\"\n    }, item.specifications.size);\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"Color\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-color\"\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: item.specifications.color\n      }\n    }));\n  })), __jsx(\"tr\", null, __jsx(\"th\", null, \"Dimensions\"), compareState.map(function (item, index) {\n    return __jsx(\"td\", {\n      key: index,\n      className: \"compare-weight\"\n    }, item.specifications.dimensions[\"long\"], \"x\", item.specifications.dimensions.width, \"x\", item.specifications.dimensions.height);\n  })))))), __jsx(PartnerOne, null)));\n}\n\nexport default /*#__PURE__*/React.memo(compare);","map":null,"metadata":{},"sourceType":"module"}