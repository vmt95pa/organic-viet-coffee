{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Pagination, Breadcrumb } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { fetchProductsRequest, fetchFeaturedProductsRequest } from \"../../redux/actions/shopActions\";\nimport LayoutOne from \"../../components/layout/LayoutOne\";\nimport Container from \"../../components/other/Container\";\nimport ShopSidebar from \"../../components/shop/ShopSidebar\";\nimport ProductGrid from \"../../components/sections/product-thumb/ProductGrid\";\nimport ShopHeader from \"../../components/shop/ShopHeader\";\n\nfunction shopGrid3Column() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var q = router.query.q;\n\n  var _useState = useState(1),\n      currentPage = _useState[0],\n      setCurrentPage = _useState[1];\n\n  var shopState = useSelector(function (state) {\n    return state.shopReducer;\n  });\n  var products = shopState.products;\n  var shopFilterState = useSelector(function (state) {\n    return state.shopFilterReducer;\n  });\n  var sort = shopFilterState.sort,\n      show = shopFilterState.show,\n      view = shopFilterState.view,\n      category = shopFilterState.category,\n      color = shopFilterState.color,\n      size = shopFilterState.size,\n      tag = shopFilterState.tag;\n  useEffect(function () {\n    dispatch(fetchFeaturedProductsRequest({\n      limit: 4\n    }));\n  }, []);\n  useEffect(function () {\n    var _fetchProductsRequest;\n\n    dispatch(fetchProductsRequest((_fetchProductsRequest = {\n      limit: show,\n      category: null,\n      page: currentPage,\n      q: q,\n      sort: sort,\n      view: view\n    }, _defineProperty(_fetchProductsRequest, \"category\", category), _defineProperty(_fetchProductsRequest, \"color\", color), _defineProperty(_fetchProductsRequest, \"size\", size), _defineProperty(_fetchProductsRequest, \"tag\", tag), _fetchProductsRequest)));\n  }, [shopFilterState, currentPage, q]);\n\n  var onPaginationChange = function onPaginationChange(current) {\n    setCurrentPage(current);\n  };\n\n  return __jsx(LayoutOne, {\n    title: \"Shop grid fullwidth\"\n  }, __jsx(Container, null, __jsx(Breadcrumb, {\n    separator: \">\"\n  }, __jsx(Breadcrumb.Item, null, __jsx(\"i\", {\n    className: \"fas fa-home\"\n  }), \"Home\"), __jsx(Breadcrumb.Item, null, \"Shop\")), __jsx(\"div\", {\n    className: \"shop\"\n  }, __jsx(\"div\", {\n    className: \"shop-content\"\n  }, __jsx(Row, {\n    gutter: 30\n  }, __jsx(Col, {\n    xs: 24,\n    lg: 6\n  }, __jsx(ShopSidebar, {\n    style: {\n      marginTop: 10 / 16 + \"em\"\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    lg: 18\n  }, __jsx(ShopHeader, {\n    title: \"Shop grid fullwidth\"\n  }), __jsx(ProductGrid, {\n    data: products,\n    hideHeader: true,\n    productCol: view === \"list\" ? {\n      xs: 24,\n      sm: 12,\n      md: 24\n    } : {\n      xs: 12,\n      sm: 12,\n      md: 8,\n      lg: 8\n    },\n    productType: view\n  }), products.count > 0 && __jsx(Pagination, {\n    onChange: onPaginationChange,\n    defaultCurrent: currentPage,\n    pageSize: show,\n    total: products.count\n  })))))));\n}\n\nexport default /*#__PURE__*/React.memo(shopGrid3Column);","map":null,"metadata":{},"sourceType":"module"}