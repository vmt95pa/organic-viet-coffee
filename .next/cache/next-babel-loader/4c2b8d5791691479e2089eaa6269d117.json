{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Tabs, Row, Col, Empty, Skeleton } from \"antd\";\nimport classNames from \"classnames\";\nimport SectionTitle from \"../../other/SectionTitle\";\nimport Product from \"../../product/Product\";\nimport FetchDataHandle from \"../../other/FetchDataHandle\";\n\nfunction ProductTab({\n  style,\n  data,\n  className,\n  onTabChange,\n  productClassName,\n  headerCategories,\n  headerTitle,\n  headerClass,\n  showTitleDecoration = false,\n  headerType = \"grid\",\n  productCol\n}) {\n  const {\n    TabPane\n  } = Tabs;\n\n  const onChooseCategory = key => {\n    onTabChange(key);\n  };\n\n  const renderTabContent = () => __jsx(FetchDataHandle, {\n    data: data,\n    renderData: data => __jsx(Row, {\n      gutter: [{\n        xs: 0,\n        md: 15\n      }, {\n        xs: 0,\n        md: 15\n      }]\n    }, data.map((item, index) => __jsx(Col, _extends({\n      key: index\n    }, productCol), __jsx(Product, {\n      className: productClassName,\n      data: item\n    }))))\n  });\n\n  return __jsx(\"div\", {\n    className: `product-tab ${classNames(className)}`,\n    style: style\n  }, __jsx(\"div\", {\n    className: `product-tab-header ${headerType === \"row\" ? \"-style-two\" : \"style-one\"}  ${classNames(headerClass)}`\n  }, headerType === \"grid\" && __jsx(SectionTitle, {\n    title: headerTitle,\n    className: \"-center\",\n    hideDecoration: showTitleDecoration\n  }), __jsx(Tabs, {\n    tabBarExtraContent: headerType === \"row\" ? {\n      left: __jsx(SectionTitle, {\n        title: headerTitle,\n        className: \"-center\",\n        hideDecoration: true\n      })\n    } : null,\n    defaultActiveKey: \"1\",\n    centered: headerType === \"row\" ? false : true,\n    onChange: onChooseCategory\n  }, __jsx(TabPane, {\n    tab: \"All\",\n    key: \"\"\n  }, renderTabContent()), headerCategories.map((item, index) => __jsx(TabPane, {\n    tab: item,\n    key: item\n  }, renderTabContent())))));\n}\n\nexport default /*#__PURE__*/React.memo(ProductTab);","map":null,"metadata":{},"sourceType":"module"}