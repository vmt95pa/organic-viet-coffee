{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Tooltip, message, Modal, Breadcrumb } from \"antd\";\nimport Link from \"next/link\";\nimport { fetchWishListRequest } from \"../../redux/actions/wishlistActions\";\nimport { fetchCartRequest } from \"../../redux/actions/cartActions\";\nimport { onRemoveProductFromWishlist } from \"../../common/wishlistServices\";\nimport { onAddProductToCart } from \"../../common/cartServices\";\nimport { checkProductInCart } from \"../../common/shopUtils\";\nimport { formatCurrency } from \"../../common/utils\";\nimport LayoutOne from \"../../components/layout/LayoutOne\";\nimport Container from \"../../components/other/Container\";\nimport FetchDataHandle from \"../../components/other/FetchDataHandle\";\nimport PartnerOne from \"../../components/sections/partners/PartnerOne\";\n\nfunction wishlist() {\n  const dispatch = useDispatch();\n  const {\n    0: addToCartLoading,\n    1: setAddToCartLoading\n  } = useState(false);\n  const {\n    0: modalState,\n    1: setModalState\n  } = useState({\n    visible: false,\n    message: \"Add some message\",\n    cartId: null\n  });\n  const cartState = useSelector(state => state.cartReducer);\n  const wishlistState = useSelector(state => state.wishlistReducer);\n\n  const showModal = (message, productId) => {\n    setModalState(_objectSpread(_objectSpread({}, modalState), {}, {\n      visible: true,\n      message: message,\n      productId\n    }));\n  };\n\n  const handleOk = e => {\n    onRemoveProductFromWishlist({\n      productId: modalState.productId,\n      onSuccess: () => {\n        setModalState(_objectSpread(_objectSpread({}, modalState), {}, {\n          visible: false\n        }));\n        message.success(\"Product removed from wishlist\");\n        dispatch(fetchWishListRequest());\n      },\n      onError: mes => {\n        setModalState(_objectSpread(_objectSpread({}, modalState), {}, {\n          visible: false\n        }));\n        message.error(mes);\n      }\n    });\n  };\n\n  const handleCancel = e => {\n    setModalState(_objectSpread(_objectSpread({}, modalState), {}, {\n      visible: false\n    }));\n  };\n\n  const onAddToCart = product => {\n    setAddToCartLoading(true);\n    onAddProductToCart({\n      product,\n      onSuccess: data => {\n        setAddToCartLoading(false);\n        message.success(\"Product added to cart\");\n        dispatch(fetchCartRequest());\n      },\n      onError: (mes, err) => {\n        setAddToCartLoading(false);\n        message.error(mes);\n      }\n    });\n  };\n\n  return __jsx(LayoutOne, {\n    title: \"Wishlist\"\n  }, __jsx(Container, null, __jsx(Breadcrumb, {\n    separator: \">\"\n  }, __jsx(Breadcrumb.Item, null, __jsx(\"i\", {\n    className: \"fas fa-home\"\n  }), \"Home\"), __jsx(Breadcrumb.Item, null, \"Shop\"), __jsx(Breadcrumb.Item, null, \"Wishlist\")), __jsx(FetchDataHandle, {\n    data: wishlistState,\n    renderData: data => __jsx(\"div\", {\n      className: \"wishlist\"\n    }, __jsx(\"div\", {\n      className: \"shop-table\"\n    }, __jsx(\"table\", null, __jsx(\"colgroup\", null, __jsx(\"col\", {\n      style: {\n        width: 150 / 16 + \"em\"\n      }\n    }), __jsx(\"col\", {\n      style: {\n        width: \"30%\"\n      }\n    }), __jsx(\"col\", {\n      style: {\n        width: \"30%\"\n      }\n    }), __jsx(\"col\", {\n      style: {\n        width: \"30%\"\n      }\n    }), __jsx(\"col\", {\n      style: {\n        width: \"20%\"\n      }\n    })), __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Product Name\"), __jsx(\"th\", null, \"Price\"), __jsx(\"th\", null, \"Add to cart\"), __jsx(\"th\", null, __jsx(Tooltip, {\n      title: \"Clear cart\"\n    }, __jsx(Button, {\n      onClick: () => showModal(\"Are you sure to remove alll product from cart\"),\n      icon: __jsx(\"i\", {\n        className: \"fal fa-times\"\n      })\n    }))))), __jsx(\"tbody\", null, data.map((item, index) => __jsx(\"tr\", {\n      key: index\n    }, __jsx(\"td\", {\n      className: \"table-img\"\n    }, __jsx(\"div\", {\n      className: \"table-img-wrapper\"\n    }, __jsx(\"img\", {\n      src: process.env.PUBLIC_URL + item.coverImage,\n      alt: \"Product image\"\n    }))), __jsx(\"td\", {\n      className: \"table-name\"\n    }, item.name), __jsx(\"td\", {\n      className: \"table-price\"\n    }, formatCurrency(item.price)), __jsx(\"td\", {\n      className: \"table-atc\"\n    }, __jsx(Button, {\n      disabled: checkProductInCart(cartState.data, item.id),\n      loading: addToCartLoading,\n      onClick: () => onAddToCart(item),\n      type: \"primary\",\n      shape: \"round\"\n    }, \"Add to cart\")), __jsx(\"td\", {\n      className: \"table-remove\"\n    }, __jsx(Tooltip, {\n      title: \"Remove product\"\n    }, __jsx(Button, {\n      onClick: () => showModal(\"Are you sure to remove this product from cart\", item.id),\n      icon: __jsx(\"i\", {\n        className: \"fal fa-times\"\n      })\n    })))))))), __jsx(Button, {\n      className: \"wishlist-btn\",\n      type: \"primary\",\n      shape: \"round\"\n    }, __jsx(Link, {\n      href: process.env.PUBLIC_URL + \"/shop/shop-3-column\"\n    }, __jsx(\"a\", null, \"Continue shopping\"))))\n  }), __jsx(PartnerOne, null)), __jsx(Modal, {\n    visible: modalState.visible,\n    onOk: handleOk,\n    onCancel: handleCancel\n  }, __jsx(\"p\", null, modalState.message)));\n}\n\nexport default /*#__PURE__*/React.memo(wishlist);","map":null,"metadata":{},"sourceType":"module"}