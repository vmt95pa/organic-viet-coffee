{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { fetchProductIdCartData, addCartData, updateCartData, removeCartData } from \"../apis/cart\";\nexport var onAddProductToCart = function onAddProductToCart(_ref) {\n  var product = _ref.product,\n      _ref$quantity = _ref.quantity,\n      quantity = _ref$quantity === void 0 ? 1 : _ref$quantity,\n      onSuccess = _ref.onSuccess,\n      onError = _ref.onError,\n      _ref$getQuantityAvail = _ref.getQuantityAvailable,\n      getQuantityAvailable = _ref$getQuantityAvail === void 0 ? function () {\n    return true;\n  } : _ref$getQuantityAvail;\n  fetchProductIdCartData(product.id).then(function (res) {\n    if (res.data.length === 0) {\n      if (product.quantity === 0) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable && getQuantityAvailable(false);\n      } else {\n        addCartData(_objectSpread(_objectSpread({}, product), {}, {\n          id: uuidv4(),\n          productId: product.id,\n          cartQuantity: quantity\n        })).then(function (res) {\n          return onSuccess && onSuccess(res);\n        })[\"catch\"](function (err) {\n          return onError && onError(\"Add product to cart failed, please try again\", err);\n        });\n      }\n    } else {\n      var pData = res.data[0];\n\n      if (pData.cartQuantity + quantity > pData.quantity) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable(false);\n      } else {\n        updateCartData(pData.id, {\n          cartQuantity: pData.cartQuantity + quantity\n        }).then(function (res) {\n          onSuccess && onSuccess(res);\n        })[\"catch\"](function (err) {\n          return onError && onError(\"Add product to cart failed, please try again\", err);\n        });\n      }\n    }\n  })[\"catch\"](function (err) {\n    return onError && onError(\"Add product to cart failed, please try again\", err);\n  });\n};\nexport var onRemoveProductFromCart = function onRemoveProductFromCart(_ref2) {\n  var cartId = _ref2.cartId,\n      onSuccess = _ref2.onSuccess,\n      onError = _ref2.onError;\n\n  if (cartId && cartId !== \"\" && cartId !== null) {\n    removeCartData(cartId).then(function (res) {\n      return onSuccess && onSuccess(res);\n    })[\"catch\"](function (err) {\n      return onError && onError(\"Remove product failm, pleaser try again\", err);\n    });\n  }\n};\nexport var onChangeProductCartQuantity = function onChangeProductCartQuantity(_ref3) {\n  var product = _ref3.product,\n      quantity = _ref3.quantity,\n      onSuccess = _ref3.onSuccess;\n\n  if (quantity > product.quantity || quantity < 1) {\n    return;\n  }\n\n  updateCartData(product.id, {\n    cartQuantity: quantity\n  }).then(function (res) {\n    return onSuccess && onSuccess(res);\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ogami-main/ogami/src/common/cartServices.js"],"names":["v4","uuidv4","fetchProductIdCartData","addCartData","updateCartData","removeCartData","onAddProductToCart","product","quantity","onSuccess","onError","getQuantityAvailable","id","then","res","data","length","productId","cartQuantity","err","pData","onRemoveProductFromCart","cartId","onChangeProductCartQuantity","console","log"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport {\n  fetchProductIdCartData,\n  addCartData,\n  updateCartData,\n  removeCartData,\n} from \"../apis/cart\";\n\nexport const onAddProductToCart = ({\n  product,\n  quantity = 1,\n  onSuccess,\n  onError,\n  getQuantityAvailable = () => true,\n}) => {\n  fetchProductIdCartData(product.id)\n    .then((res) => {\n      if (res.data.length === 0) {\n        if (product.quantity === 0) {\n          onError && onError(\"Reached maximum number of products\");\n          getQuantityAvailable && getQuantityAvailable(false);\n        } else {\n          addCartData({\n            ...product,\n            id: uuidv4(),\n            productId: product.id,\n            cartQuantity: quantity,\n          })\n            .then((res) => onSuccess && onSuccess(res))\n            .catch(\n              (err) =>\n                onError &&\n                onError(\"Add product to cart failed, please try again\", err)\n            );\n        }\n      } else {\n        let pData = res.data[0];\n        if (pData.cartQuantity + quantity > pData.quantity) {\n          onError && onError(\"Reached maximum number of products\");\n          getQuantityAvailable(false);\n        } else {\n          updateCartData(pData.id, {\n            cartQuantity: pData.cartQuantity + quantity,\n          })\n            .then((res) => {\n              onSuccess && onSuccess(res);\n            })\n            .catch(\n              (err) =>\n                onError &&\n                onError(\"Add product to cart failed, please try again\", err)\n            );\n        }\n      }\n    })\n    .catch(\n      (err) =>\n        onError && onError(\"Add product to cart failed, please try again\", err)\n    );\n};\n\nexport const onRemoveProductFromCart = ({ cartId, onSuccess, onError }) => {\n  if (cartId && cartId !== \"\" && cartId !== null) {\n    removeCartData(cartId)\n      .then((res) => onSuccess && onSuccess(res))\n      .catch(\n        (err) =>\n          onError && onError(\"Remove product failm, pleaser try again\", err)\n      );\n  }\n};\n\nexport const onChangeProductCartQuantity = ({\n  product,\n  quantity,\n  onSuccess,\n}) => {\n  if (quantity > product.quantity || quantity < 1) {\n    return;\n  }\n  updateCartData(product.id, { cartQuantity: quantity })\n    .then((res) => onSuccess && onSuccess(res))\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}