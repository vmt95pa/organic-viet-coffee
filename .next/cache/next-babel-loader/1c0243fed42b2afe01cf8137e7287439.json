{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Button } from \"antd\";\nimport React, { useRef } from \"react\";\nimport Slider from \"react-slick\";\nimport classNames from \"classnames\";\nimport Product from \"../../product/Product\";\nimport FetchDataHandle from \"../../other/FetchDataHandle\";\n\nfunction ProductSlide({\n  style,\n  data,\n  headerTitle,\n  headerClass,\n  productType,\n  productClassName,\n  className,\n  rows\n}) {\n  const sliderSettings = {\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    rows: rows ? rows : 1,\n    responsive: [{\n      breakpoint: 992,\n      settings: {\n        slidesToShow: 3\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 2\n      }\n    }, {\n      breakpoint: 576,\n      settings: {\n        slidesToShow: 1\n      }\n    }]\n  };\n  const sliderRef = useRef(null);\n  return __jsx(\"div\", {\n    className: `product-slide ${classNames(className)}`,\n    style: style\n  }, __jsx(\"div\", {\n    className: `product-slide-header ${classNames(headerClass)}`\n  }, __jsx(\"h5\", null, headerTitle), __jsx(\"div\", {\n    className: \"product-slide-header__controller\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    icon: __jsx(\"i\", {\n      className: \"fal fa-angle-left\"\n    }),\n    onClick: () => sliderRef.current.slickPrev()\n  }), __jsx(Button, {\n    type: \"primary\",\n    icon: __jsx(\"i\", {\n      className: \"fal fa-angle-right\"\n    }),\n    onClick: () => sliderRef.current.slickNext()\n  }))), __jsx(\"div\", {\n    className: \"product-slide-content\"\n  }, __jsx(FetchDataHandle, {\n    data: data,\n    renderData: data => __jsx(Slider, _extends({\n      ref: sliderRef\n    }, sliderSettings), data.map((item, index) => __jsx(\"div\", {\n      className: \"slide-item\",\n      key: index\n    }, __jsx(Product, {\n      className: productClassName,\n      type: productType,\n      data: item\n    }))))\n  })));\n}\n\nexport default /*#__PURE__*/React.memo(ProductSlide);","map":null,"metadata":{},"sourceType":"module"}