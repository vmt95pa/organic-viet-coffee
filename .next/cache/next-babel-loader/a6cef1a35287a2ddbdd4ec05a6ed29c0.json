{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\ogami-main\\\\ogami\\\\src\\\\common\\\\withHeaderScroll.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nexport default function withHeaderScroll(WrappedComponent) {\n  return function (props) {\n    const headerRef = useRef(null);\n    const {\n      0: scroll,\n      1: setScroll\n    } = useState(0);\n    const {\n      0: isHeaderFixed,\n      1: setIsHeaderFixed\n    } = useState(0);\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n    useEffect(() => {\n      if (scroll >= headerRef.current.offsetHeight) {\n        setIsHeaderFixed(true);\n      } else {\n        setIsHeaderFixed(false);\n      }\n    }, [scroll]);\n\n    function handleScroll() {\n      setScroll(window.scrollY);\n    }\n\n    return __jsx(\"div\", {\n      ref: headerRef,\n      className: `header ${classNames({\n        fixed: isHeaderFixed\n      }, props.className)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(WrappedComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    })));\n  };\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ogami-main/ogami/src/common/withHeaderScroll.js"],"names":["React","useState","useEffect","useRef","classNames","withHeaderScroll","WrappedComponent","props","headerRef","scroll","setScroll","isHeaderFixed","setIsHeaderFixed","window","addEventListener","handleScroll","removeEventListener","current","offsetHeight","scrollY","fixed","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,gBAA1B,EAA4C;AACzD,SAAO,UAAUC,KAAV,EAAiB;AACtB,UAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,UAAM;AAAA,SAACM,MAAD;AAAA,SAASC;AAAT,QAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,UAAM;AAAA,SAACU,aAAD;AAAA,SAAgBC;AAAhB,QAAoCX,QAAQ,CAAC,CAAD,CAAlD;AACAC,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,aAAO,MAAM;AACXF,QAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC;AACD,OAFD;AAGD,KALQ,EAKN,EALM,CAAT;AAOAb,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIO,MAAM,IAAID,SAAS,CAACS,OAAV,CAAkBC,YAAhC,EAA8C;AAC5CN,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OAFD,MAEO;AACLA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KANQ,EAMN,CAACH,MAAD,CANM,CAAT;;AAQA,aAASM,YAAT,GAAwB;AACtBL,MAAAA,SAAS,CAACG,MAAM,CAACM,OAAR,CAAT;AACD;;AAED,WACE;AACE,MAAA,GAAG,EAAEX,SADP;AAEE,MAAA,SAAS,EAAG,UAASJ,UAAU,CAC7B;AAAEgB,QAAAA,KAAK,EAAET;AAAT,OAD6B,EAE7BJ,KAAK,CAACc,SAFuB,CAG7B,EALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,gBAAD,eAAsBd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,CADF;AAWD,GAlCD;AAmCD","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\n\nexport default function withHeaderScroll(WrappedComponent) {\n  return function (props) {\n    const headerRef = useRef(null);\n    const [scroll, setScroll] = useState(0);\n    const [isHeaderFixed, setIsHeaderFixed] = useState(0);\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n\n    useEffect(() => {\n      if (scroll >= headerRef.current.offsetHeight) {\n        setIsHeaderFixed(true);\n      } else {\n        setIsHeaderFixed(false);\n      }\n    }, [scroll]);\n\n    function handleScroll() {\n      setScroll(window.scrollY);\n    }\n\n    return (\n      <div\n        ref={headerRef}\n        className={`header ${classNames(\n          { fixed: isHeaderFixed },\n          props.className\n        )}`}\n      >\n        <WrappedComponent {...props} />\n      </div>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}