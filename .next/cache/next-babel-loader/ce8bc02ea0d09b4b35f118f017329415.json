{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOP_FILTER } from \"../actionTypes\";\nvar initialState = {\n  sort: {},\n  show: \"10\",\n  view: \"grid\",\n  category: \"\",\n  color: \"\",\n  size: \"\",\n  tag: \"\"\n};\nexport default function shopFilterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOP_FILTER.RESET_FILTERS:\n      return {\n        sort: {},\n        show: \"10\",\n        view: \"grid\",\n        category: \"\",\n        color: \"\",\n        size: \"\",\n        tag: \"\"\n      };\n\n    case SHOP_FILTER.SET_SORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sort: action.sort\n      });\n\n    case SHOP_FILTER.SET_SHOW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        show: action.show\n      });\n\n    case SHOP_FILTER.SET_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: action.view\n      });\n\n    case SHOP_FILTER.SET_CATEGORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        category: action.category\n      });\n\n    case SHOP_FILTER.SET_COLOR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        color: action.color\n      });\n\n    case SHOP_FILTER.SET_SIZE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        size: action.size\n      });\n\n    case SHOP_FILTER.SET_TAG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tag: action.tag\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}