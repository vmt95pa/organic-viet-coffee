{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, message, Rate, Tooltip, Modal } from \"antd\";\nimport Link from \"next/link\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport classNames from \"classnames\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { formatCurrency } from \"../../common/utils\";\nimport { checkProductInWishlist } from \"../../common/shopUtils\";\nimport { fetchCartRequest } from \"../../redux/actions/cartActions\";\nimport { fetchWishListRequest } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare, removeFromCompare } from \"../../redux/actions/compareActions\";\nimport { onAddProductToCart } from \"../../common/cartServices\";\nimport { onAddProductToWishlist, onRemoveProductFromWishlist } from \"../../common/wishlistServices\";\nimport ProductDetailLayout from \"../detail/product/ProductDetailLayout\";\n\nfunction Product(_ref) {\n  var data = _ref.data,\n      className = _ref.className,\n      type = _ref.type,\n      _ref$countdownLast = _ref.countdownLast,\n      countdownLast = _ref$countdownLast === void 0 ? 100000000 : _ref$countdownLast;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      addToCartLoading = _useState2[0],\n      setAddToCartLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      addToWishlistLoading = _useState3[0],\n      setAddToWishlistLoading = _useState3[1];\n\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n  var wishlistState = useSelector(function (state) {\n    return state.wishlistReducer;\n  });\n  var compareState = useSelector(function (state) {\n    return state.compareReducer;\n  });\n  var productInWishlist = checkProductInWishlist(wishlistState.data, data.id);\n  var productInCompare = checkProductInWishlist(compareState, data.id);\n\n  var showModal = function showModal() {\n    setModalVisible(true);\n  };\n\n  var onModalClose = function onModalClose(e) {\n    setModalVisible(false);\n  };\n\n  var onAddToCart = function onAddToCart(product) {\n    if (addToCartLoading) {\n      return;\n    }\n\n    setAddToCartLoading(true);\n    onAddProductToCart({\n      product: product,\n      onSuccess: function onSuccess(data) {\n        setAddToCartLoading(false);\n        message.success(\"Product added to cart\");\n        dispatch(fetchCartRequest());\n      },\n      onError: function onError(mes, err) {\n        setAddToCartLoading(false);\n        message.error(mes);\n      }\n    });\n  };\n\n  var onAddWishlist = function onAddWishlist(product) {\n    if (addToWishlistLoading) {\n      return;\n    }\n\n    setAddToWishlistLoading(true);\n\n    if (!productInWishlist) {\n      onAddProductToWishlist({\n        product: product,\n        onSuccess: function onSuccess(data) {\n          setAddToWishlistLoading(false);\n          message.success(\"Product added to wishlist\");\n          dispatch(fetchWishListRequest());\n        },\n        onError: function onError(mes, err) {\n          setAddToWishlistLoading(false);\n          message.error(mes);\n          console.log(err);\n        }\n      });\n    } else {\n      onRemoveProductFromWishlist({\n        productId: product.id,\n        onSuccess: function onSuccess(data) {\n          setAddToWishlistLoading(false);\n          message.error(\"Product removed from wishlist\");\n          dispatch(fetchWishListRequest());\n        },\n        onError: function onError(mes, err) {\n          setAddToWishlistLoading(false);\n          message.error(mes);\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  var onAddToCompare = function onAddToCompare(product) {\n    if (productInCompare) {\n      dispatch(removeFromCompare(product.id));\n      message.error(\"Product removed from compare\");\n    } else {\n      dispatch(addToCompare(product));\n      message.success(\"Product added to compare\");\n    }\n  };\n\n  var getRandomArbitrary = function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  };\n\n  var rederProductType = function rederProductType(type) {\n    switch (type) {\n      case \"tiny\":\n        return __jsx(\"div\", {\n          className: \"product-tiny \".concat(classNames(className))\n        }, __jsx(\"div\", {\n          className: \"product-tiny-img\"\n        }, __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          title: data.name\n        }, __jsx(\"img\", {\n          src: data.coverImage,\n          alt: \"Product image\"\n        })))), __jsx(\"div\", {\n          className: \"product-tiny-content\"\n        }, __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          className: \"product-tiny-name\",\n          title: \"Pure Pineapple\"\n        }, data.name)), __jsx(\"h3\", {\n          className: \"product-tiny-price\"\n        }, data.discount ? formatCurrency(data.price - data.discount) : formatCurrency(data.price), data.discount && __jsx(\"del\", null, formatCurrency(data.price)))));\n\n      case \"dale\":\n        return __jsx(\"div\", {\n          className: \"product-dale \".concat(classNames(className))\n        }, __jsx(\"div\", {\n          className: \"product-dale-img\"\n        }, __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          title: data.name\n        }, __jsx(\"img\", {\n          src: data.coverImage,\n          alt: \"Product image\"\n        })))), __jsx(Countdown, {\n          date: Date.now() + getRandomArbitrary(100000000, 150000000),\n          renderer: function renderer(_ref2) {\n            var days = _ref2.days,\n                hours = _ref2.hours,\n                minutes = _ref2.minutes,\n                seconds = _ref2.seconds;\n            return __jsx(\"div\", {\n              className: \"product-dale-countdown\"\n            }, __jsx(\"div\", {\n              className: \"product-dale-countdown-item\"\n            }, __jsx(\"h6\", null, zeroPad(days)), \" \", __jsx(\"span\", null, \"days\")), __jsx(\"div\", {\n              className: \"product-dale-countdown-item\"\n            }, __jsx(\"h6\", null, zeroPad(hours)), \" \", __jsx(\"span\", null, \"hr\")), __jsx(\"div\", {\n              className: \"product-dale-countdown-item\"\n            }, __jsx(\"h6\", null, zeroPad(minutes), \" \"), __jsx(\"span\", null, \"min\")), __jsx(\"div\", {\n              className: \"product-dale-countdown-item\"\n            }, __jsx(\"h6\", null, zeroPad(seconds)), \" \", __jsx(\"span\", null, \"sec\")));\n          }\n        }), __jsx(\"div\", {\n          className: \"product-dale-content\"\n        }, __jsx(\"h5\", {\n          className: \"product-dale-type\"\n        }, data.category), __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          className: \"product-dale-name\",\n          title: \"Pure Pineapple\"\n        }, data.name)), __jsx(\"h3\", {\n          className: \"product-dale-price\"\n        }, data.discount ? formatCurrency(data.price - data.discount) : formatCurrency(data.price), data.discount && __jsx(\"del\", null, formatCurrency(data.price)))), __jsx(\"div\", {\n          className: \"product-dale-select\"\n        }, __jsx(Tooltip, {\n          title: \"Add to wishlist\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddWishlist(data);\n          },\n          className: \"product-btn \".concat(classNames({\n            active: productInWishlist\n          })),\n          type: \"primary\",\n          shape: \"round\",\n          icon: addToWishlistLoading ? __jsx(LoadingOutlined, {\n            spin: true\n          }) : __jsx(\"i\", {\n            className: \"far fa-heart\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Add to cart\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCart(data);\n          },\n          className: \"product-btn\",\n          type: \"primary\",\n          shape: \"round\",\n          icon: addToCartLoading ? __jsx(LoadingOutlined, {\n            spin: true\n          }) : __jsx(\"i\", {\n            className: \"far fa-shopping-bag\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Add to compare\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCompare(data);\n          },\n          className: \"product-btn \".concat(classNames({\n            active: productInCompare\n          })),\n          type: \"primary\",\n          shape: \"round\",\n          icon: __jsx(\"i\", {\n            className: \"far fa-random\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Quick view\"\n        }, __jsx(Button, {\n          onClick: showModal,\n          className: \"product-btn\",\n          type: \"primary\",\n          shape: \"round\",\n          icon: __jsx(\"i\", {\n            className: \"far fa-eye\"\n          })\n        }))));\n\n      case \"list\":\n        return __jsx(\"div\", {\n          className: \"product-list\"\n        }, __jsx(\"div\", {\n          className: \"product-img\"\n        }, __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          title: data.name\n        }, __jsx(\"img\", {\n          src: data.coverImage,\n          alt: \"Product image\"\n        }))), __jsx(Button, {\n          type: \"primary\",\n          onClick: showModal\n        }, \"Quick view\")), __jsx(\"div\", {\n          className: \"product-list-content\"\n        }, __jsx(\"h5\", {\n          className: \"product-type\"\n        }, data.category), __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          className: \"product-name\",\n          title: \"Pure Pineapple\"\n        }, data.name)), __jsx(Rate, {\n          className: \"product-rate\",\n          disabled: true,\n          defaultValue: data.rate\n        }), __jsx(\"p\", {\n          className: \"product-description\"\n        }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor niam\"), data.quantity > 0 ? __jsx(\"h5\", {\n          className: \"product-availability -instock\"\n        }, \"Availability: \", __jsx(\"span\", null, \" \", data.quantity, \" in stock\")) : __jsx(\"h5\", {\n          className: \"product-availability -outstock\"\n        }, \"Availability: \", __jsx(\"span\", null, \" Out stock\"))), __jsx(\"div\", {\n          className: \"product-list-actions\"\n        }, __jsx(\"div\", {\n          className: \"product-detail-content__delivery\"\n        }, \"Free delivery\"), __jsx(\"h3\", {\n          className: \"product-detail-content__price\"\n        }, data.discount && __jsx(\"del\", null, formatCurrency(data.price)), __jsx(\"div\", {\n          className: \"product-detail-content__price-discount\"\n        }, __jsx(\"h5\", null, data.discount ? formatCurrency(data.price - data.discount) : formatCurrency(data.price)))), __jsx(\"div\", {\n          className: \"product-detail-content__actions\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCart(data);\n          },\n          loading: addToCartLoading,\n          shape: \"round\"\n        }, \"Add to cart\"), __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCompare(data);\n          },\n          shape: \"round\",\n          className: classNames({\n            active: productInCompare\n          })\n        }, \"Add to compare\"))));\n\n      default:\n        return __jsx(\"div\", {\n          className: \"product \".concat(classNames(className))\n        }, __jsx(\"div\", {\n          className: \"product-img\"\n        }, __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          title: data.name\n        }, __jsx(\"img\", {\n          src: data.coverImage,\n          alt: \"Product image\"\n        })))), __jsx(\"div\", {\n          className: \"product-content\"\n        }, __jsx(\"h5\", {\n          className: \"product-type\"\n        }, data.category), __jsx(Link, {\n          href: process.env.PUBLIC_URL + \"/product/[slug]\",\n          as: process.env.PUBLIC_URL + \"/product/\".concat(data.slug)\n        }, __jsx(\"a\", {\n          className: \"product-name\",\n          title: \"Pure Pineapple\"\n        }, data.name)), __jsx(\"h3\", {\n          className: \"product-price\"\n        }, data.discount ? formatCurrency(data.price - data.discount) : formatCurrency(data.price), data.discount && __jsx(\"del\", null, formatCurrency(data.price)))), __jsx(\"div\", {\n          className: \"product-select\"\n        }, __jsx(Tooltip, {\n          title: \"Add to wishlist\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddWishlist(data);\n          },\n          className: \"product-btn \".concat(classNames({\n            active: productInWishlist\n          })),\n          type: \"primary\",\n          shape: \"round\",\n          icon: addToWishlistLoading ? __jsx(LoadingOutlined, {\n            spin: true\n          }) : __jsx(\"i\", {\n            className: \"far fa-heart\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Add to cart\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCart(data);\n          },\n          className: \"product-btn\",\n          type: \"primary\",\n          shape: \"round\",\n          icon: addToCartLoading ? __jsx(LoadingOutlined, {\n            spin: true\n          }) : __jsx(\"i\", {\n            className: \"far fa-shopping-bag\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Add to compare\"\n        }, __jsx(Button, {\n          onClick: function onClick() {\n            return onAddToCompare(data);\n          },\n          className: \"product-btn \".concat(classNames({\n            active: productInCompare\n          })),\n          type: \"primary\",\n          shape: \"round\",\n          icon: __jsx(\"i\", {\n            className: \"far fa-random\"\n          })\n        })), __jsx(Tooltip, {\n          title: \"Quick view\"\n        }, __jsx(Button, {\n          onClick: showModal,\n          className: \"product-btn\",\n          type: \"primary\",\n          shape: \"round\",\n          icon: __jsx(\"i\", {\n            className: \"far fa-eye\"\n          })\n        }))));\n    }\n  };\n\n  return __jsx(React.Fragment, null, rederProductType(type), __jsx(Modal, {\n    visible: modalVisible,\n    onCancel: onModalClose,\n    footer: null,\n    header: null,\n    width: 860\n  }, __jsx(ProductDetailLayout, {\n    style: {\n      marginBottom: 0\n    },\n    hideTab: true,\n    data: data\n  })));\n}\n\nexport default /*#__PURE__*/React.memo(Product);","map":null,"metadata":{},"sourceType":"module"}