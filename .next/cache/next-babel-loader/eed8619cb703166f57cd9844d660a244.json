{"ast":null,"code":"import { COMPARE } from \"../actionTypes\";\nconst initialState = [];\nexport default function compareReducer(state = initialState, action) {\n  switch (action.type) {\n    case COMPARE.ADD_TO_COMPARE:\n      if (!state.includes(action.payload.data)) {\n        if (state.legth <= 3) {\n          return [action.payload.data, ...state];\n        } else {\n          return [action.payload.data, ...state.slice(0, 2)];\n        }\n      }\n\n    case COMPARE.REMOVE_FROM_COMPARE:\n      const compareItem = state.find(item => item.id === action.payload.productId);\n      const compareItemIndex = compareItem && state.indexOf(compareItem);\n      return [...state.slice(0, compareItemIndex), ...state.slice(compareItemIndex + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ogami-main/ogami/src/redux/reducers/compareReducer.js"],"names":["COMPARE","initialState","compareReducer","state","action","type","ADD_TO_COMPARE","includes","payload","data","legth","slice","REMOVE_FROM_COMPARE","compareItem","find","item","id","productId","compareItemIndex","indexOf"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGF,YAAhC,EAA8CG,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,OAAO,CAACM,cAAb;AACE,UAAI,CAACH,KAAK,CAACI,QAAN,CAAeH,MAAM,CAACI,OAAP,CAAeC,IAA9B,CAAL,EAA0C;AACxC,YAAIN,KAAK,CAACO,KAAN,IAAe,CAAnB,EAAsB;AACpB,iBAAO,CAACN,MAAM,CAACI,OAAP,CAAeC,IAAhB,EAAsB,GAAGN,KAAzB,CAAP;AACD,SAFD,MAEO;AACL,iBAAO,CAACC,MAAM,CAACI,OAAP,CAAeC,IAAhB,EAAsB,GAAGN,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAzB,CAAP;AACD;AACF;;AACH,SAAKX,OAAO,CAACY,mBAAb;AACE,YAAMC,WAAW,GAAGV,KAAK,CAACW,IAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,MAAM,CAACI,OAAP,CAAeS,SADnB,CAApB;AAGA,YAAMC,gBAAgB,GAAGL,WAAW,IAAIV,KAAK,CAACgB,OAAN,CAAcN,WAAd,CAAxC;AACA,aAAO,CACL,GAAGV,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeO,gBAAf,CADE,EAEL,GAAGf,KAAK,CAACQ,KAAN,CAAYO,gBAAgB,GAAG,CAA/B,CAFE,CAAP;;AAIF;AACE,aAAOf,KAAP;AAnBJ;AAqBD","sourcesContent":["import { COMPARE } from \"../actionTypes\";\n\nconst initialState = [];\n\nexport default function compareReducer(state = initialState, action) {\n  switch (action.type) {\n    case COMPARE.ADD_TO_COMPARE:\n      if (!state.includes(action.payload.data)) {\n        if (state.legth <= 3) {\n          return [action.payload.data, ...state];\n        } else {\n          return [action.payload.data, ...state.slice(0, 2)];\n        }\n      }\n    case COMPARE.REMOVE_FROM_COMPARE:\n      const compareItem = state.find(\n        (item) => item.id === action.payload.productId\n      );\n      const compareItemIndex = compareItem && state.indexOf(compareItem);\n      return [\n        ...state.slice(0, compareItemIndex),\n        ...state.slice(compareItemIndex + 1),\n      ];\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}