{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Select, AutoComplete, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport categories from \"../../../data/categories.json\";\nimport useDebounce from \"../../../common/useDebound\";\nimport { fetchSearchedProductRequest } from \"../../../redux/actions/shopActions\";\nimport Link from \"next/link\";\n\nfunction SearchForm({\n  enterButton = \"Search\",\n  hideSelect\n}) {\n  const {\n    Option\n  } = Select;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: currentSearch,\n    1: setCurrentSearch\n  } = useState(\"\");\n  const {\n    0: currentCategory,\n    1: setCurrentCategory\n  } = useState(\"\");\n  const deboundValue = useDebounce(currentSearch, 300);\n  const shopState = useSelector(state => state.shopReducer);\n  const {\n    searchedProducts\n  } = shopState;\n\n  const onChange = val => {\n    setCurrentSearch(val);\n  };\n\n  const onSelectOption = (value, option) => {\n    setCurrentSearch(value);\n  };\n\n  const onSearch = val => {\n    if (!currentSearch || currentSearch === \"\") {\n      return;\n    } else {\n      router.push({\n        pathname: process.env.PUBLIC_URL + \"/shop/shop-3-column\",\n        query: {\n          q: currentSearch\n        }\n      });\n    }\n  };\n\n  const onChooseCateogry = val => {\n    setCurrentCategory(val);\n  };\n\n  const options = searchedProducts.data.length > 0 && searchedProducts.data.map(item => ({\n    value: item.name\n  }));\n  useEffect(() => {\n    dispatch(fetchSearchedProductRequest({\n      input: currentSearch,\n      limit: 10,\n      category: currentCategory\n    }));\n  }, [deboundValue, currentCategory]);\n  return __jsx(\"div\", {\n    className: \"search-form\"\n  }, __jsx(\"div\", {\n    className: \"search-form-wrapper\"\n  }, !hideSelect && __jsx(\"div\", {\n    className: \"search-form-select\"\n  }, __jsx(Select, {\n    defaultValue: currentCategory,\n    suffixIcon: __jsx(\"i\", {\n      className: \"far fa-angle-down\"\n    }),\n    bordered: false,\n    onChange: onChooseCateogry\n  }, __jsx(Option, {\n    value: \"\"\n  }, \"All categories\"), categories.map((item, index) => __jsx(Option, {\n    key: index,\n    value: item.value\n  }, item.name)))), __jsx(\"div\", {\n    className: \"search-form-input\"\n  }, __jsx(AutoComplete, {\n    backfill: true,\n    value: currentSearch,\n    onSelect: onSelectOption,\n    onChange: onChange,\n    options: options,\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n  }, __jsx(Input.Search, {\n    placeholder: \"What do you need\",\n    size: \"large\",\n    enterButton: enterButton,\n    bordered: false,\n    loading: searchedProducts.loading,\n    onSearch: onSearch\n  })))));\n}\n\nexport default /*#__PURE__*/React.memo(SearchForm);","map":null,"metadata":{},"sourceType":"module"}