{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BLOG } from \"../actionTypes\";\nvar initialState = {\n  allPosts: {\n    loading: true,\n    data: [],\n    error: false,\n    count: 0\n  },\n  recentPosts: {\n    loading: true,\n    data: [],\n    error: false\n  },\n  postDetail: {\n    loading: true,\n    data: [],\n    error: false\n  }\n};\nexport default function blogReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //All posts\n    case BLOG.FETCH_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: {\n          loading: true,\n          data: [],\n          error: false\n        }\n      });\n\n    case BLOG.FETCH_POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: _objectSpread(_objectSpread({}, state.allPosts), {}, {\n          loading: false,\n          data: action.payload.data,\n          count: action.payload.postCount\n        })\n      });\n\n    case BLOG.FETCH_POSTS_FAIL:\n      // let { err } = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: _objectSpread(_objectSpread({}, state.allPosts), {}, {\n          loading: false,\n          error: true\n        })\n      });\n    //Recent posts\n\n    case BLOG.FETCH_RECENT_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPosts: {\n          loading: true,\n          data: [],\n          error: false\n        }\n      });\n\n    case BLOG.FETCH_RECENT_POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPosts: _objectSpread(_objectSpread({}, state.recentPosts), {}, {\n          loading: false,\n          data: action.payload.data,\n          count: action.payload.postCount\n        })\n      });\n\n    case BLOG.FETCH_RECENT_POSTS_FAIL:\n      // let { err } = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPosts: _objectSpread(_objectSpread({}, state.recentPosts), {}, {\n          loading: false,\n          error: true\n        })\n      });\n    //Post detail\n\n    case BLOG.FETCH_POST_DETAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postDetail: {\n          loading: true,\n          data: [],\n          error: false\n        }\n      });\n\n    case BLOG.FETCH_POST_DETAIL_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postDetail: _objectSpread(_objectSpread({}, state.postDetail), {}, {\n          loading: false,\n          data: action.payload.data\n        })\n      });\n\n    case BLOG.FETCH_POST_DETAIL_FAIL:\n      // let { err } = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postDetail: _objectSpread(_objectSpread({}, state.postDetail), {}, {\n          loading: false,\n          error: true\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}