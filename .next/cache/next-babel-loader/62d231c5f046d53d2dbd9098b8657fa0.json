{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nexport default function withHeaderScroll(WrappedComponent) {\n  return function (props) {\n    const headerRef = useRef(null);\n    const {\n      0: scroll,\n      1: setScroll\n    } = useState(0);\n    const {\n      0: isHeaderFixed,\n      1: setIsHeaderFixed\n    } = useState(0);\n    useEffect(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n    useEffect(() => {\n      if (scroll >= headerRef.current.offsetHeight) {\n        setIsHeaderFixed(true);\n      } else {\n        setIsHeaderFixed(false);\n      }\n    }, [scroll]);\n\n    function handleScroll() {\n      setScroll(window.scrollY);\n    }\n\n    return __jsx(\"div\", {\n      ref: headerRef,\n      className: `header ${classNames({\n        fixed: isHeaderFixed\n      }, props.className)}`\n    }, __jsx(WrappedComponent, props));\n  };\n}","map":null,"metadata":{},"sourceType":"module"}